---

# fly --target lh login --concourse-url http://localhost:8080
# fly --target lh set-pipeline --config pipeline.yaml --pipeline Walking-Skeleton

resources:

  #
  # GET THE SOURCE CODE
  #

  - name: source-code
    type: git
    icon: github-circle
    # check_every: 5 # Minutes
    source:
      uri: https://github.com/morsley-uk/walking-skeleton
      branch: master
      ignore_paths:
      - .git/**
      - .git/*
      - .git/
      - .git
      - .gitignore
      - License
      - ReadMe.md

  #
  # DETERMINE THE SEMANTIC VERSION
  #

  #- name: semantic-version

  #
  # GET THE KUBERNETES CLUSTER 
  #

  #- name: kubernetes-cluster

jobs:

  - name: compile

    plan:

      - get: source-code
        trigger: true

      #
      # LIST SOURCE CODE
      #

      - task: tree
        file: source-code/Pipelines/CI/Tasks/tree-source.yaml

      #
      # CLEAN THE SOURCE CODE
      #

      - task: clean
        file: source-code/Pipelines/CI/Tasks/clean.yaml

      #
      # LIST CLEANED CODE
      #

      - task: tree
        file: cleaned-code/Pipelines/CI/Tasks/tree-cleaned.yaml

      #
      # RESTORE THE DEPENDENCIES
      #

      - task: restore
        file: cleaned-code/Pipelines/CI/Tasks/restore.yaml

      #
      # LIST RESTORERD CODE
      #

      - task: tree
        file: restored-code/Pipelines/CI/Tasks/tree-restored.yaml

      #
      # BUILD THE PROJECT
      #

      - task: build
        file: restored-code/Pipelines/CI/Tasks/build.yaml

      # - task: build
      #   config: 
      #     inputs:
      #     - name: source-code
      #     platform: linux
      #     image_resource:
      #       type: docker-image
      #       source:
      #         repository: mcr.microsoft.com/dotnet/core/sdk
      #         tag: 3.1.101-bionic
      #     #outputs:
      #     #- name: restored-code
      #     run:
      #       path: sh
      #       args:
      #       - -exec
      #       - |
      #         cd source-code/Pipelines/CI/Scripts
      #         chmod u+x build.sh
      #         cd ../../..
      #         ./Pipelines/CI/Scripts/build.sh 

#  - task: build

#  - task: publish